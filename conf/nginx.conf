worker_processes 1;

error_log /etc/nginx/logs/error.log debug;

events {
    worker_connections 10240;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /etc/nginx/logs/access.log  main;
    sendfile on;
    keepalive_timeout 80;
    server_names_hash_bucket_size 64;

    upstream bannerweb {
        server bannerweb:38080;
    }

# = 用于标准uri前，要求请求字符串与url严格匹配
# ～ 用于表示uri包含正则表达式
# ～* 用于表示uri包含正则表达式，并且不区分大小写
# ^~ 用于标准uri前，有匹配的请求字符串后不再用location块中的正则uri做匹配

    server {
        listen 80;
        # listen 443 ssl;
        # dev.shadowfox.cc 或 test.shadowfox.cc
        server_name api.fengfenghuo.top;
        # ssl_certificate /ssl/shadowfox_server.crt;
        # ssl_certificate_key /ssl/shadowfox_server.key_nopass;
        # ssl_session_timeout 5m;
        # ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        # ssl_prefer_server_ciphers on;
        # ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';


        location ^~ /bannerweb/ {
            proxy_pass http://bannerweb/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_http_version 1.1;
        }

        location ~ /download/ {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://bannerweb;
        }

        # location ~ /tx/ {
        #     proxy_pass_header Server;
        #     proxy_set_header Host $http_host;
        #     proxy_redirect off;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Scheme $scheme;
        #     proxy_pass http://chain_http;
        # }
        # location ~ /shadowfox/ {
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Forwarded-For $remote_addr;
        #     root   /usr/share/nginx/html;
        #     index  index.html index.htm;
        # }

        location ~ .*\.(html|css|js|json|png|ico)$ {
            root   /data;
        }

        # location / {
        #     proxy_pass http://signal_ws;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Forwarded-For $remote_addr;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        # }
    }
}
